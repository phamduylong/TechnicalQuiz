@model Quiz
@{
	ViewData["Title"] = "Home Page";
	var inputType = "radio";
	if (Model.AllowMultipleChoices)
	{
		inputType = "checkbox";
	}
}

<div>
	<form>
		<h5>@Model.Title</h5><br />
		<div class="form-check">
			<input class="form-check-input" type="@(inputType)" name="choices" value="@Model.Answer">
			<label class="form-check-label">
				@Model.Answer
			</label>
		</div>
		@{
			for (var i = 0; i < Model.Options.Count; i++)
			{
				<div class="form-check">
					<input class="form-check-input" type="@(inputType)" name="choices" value="@Model.Options[i]">
					<label class="form-check-label">
						@Model.Options[i]
					</label>
				</div>
			}
		}
		<input type="submit" />
	</form>
</div>

<script>
	const form = document.querySelector("form");
	// fix this event listener, only works for radio group
	form.addEventListener(
		"submit",
		async (event) => {
			const data = await new FormData(form);
			for (const entry of data) {
				console.log(entry);
				if (entry[1] === "@(Model.Answer)") {

					// modal here
				}
			}
			event.preventDefault();
		},
		false
	);
</script>
