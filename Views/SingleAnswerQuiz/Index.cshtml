@using Microsoft.AspNetCore.Mvc.TagHelpers
@model List<TechnicalQuiz.Data.SingleAnswerQuiz>
@{
	ViewData["Title"] = "Single Answer Quizzes ❓";
	var inputType = "radio";
}

<!-- Main card container -->
<div class="card">
	<div class="card-body">
		@{
			foreach (var model in Model)
			{
				<div class="card m-2">
					<div class="card-body">
						<div>
							<form>
								<h5>@(model.Title)</h5><br />

								@{
									foreach (var option in model.Options)
									{
										<div class="form-check">
											<input class="form-check-input" type="@(inputType)" name="choices" value="@option">
											<label class="form-check-label">
												@option
											</label>
										</div>
									}
								}
								<div class="form-check">
									<input class="form-check-input" type="@(inputType)" name="choices" value="@(model.Answer)">
									<label class="form-check-label">
										@(model.Answer)
									</label>
								</div>
							</form>
						</div>
					</div>
				</div>
			}
		}

		<div class="text-center">
			<button class="btn btn-outline-primary m-4" id="submitBtn">Submit Answers</button>
		</div>

	</div>
</div>

<!-- Modal -->
<div class="modal fade" id="modal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="exampleModalLabel">Result 💫</h5>
				<button type="button" class="close modalCloseBtn" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body" id="result-modal-body">
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary modalCloseBtn">Close</button>
			</div>
		</div>
	</div>
</div>

<script>
	const correctAnswers = @Html.Raw(Json.Serialize(Model));
	const quiz_forms = document.querySelectorAll("form");
	const modalBody = document.getElementById("result-modal-body");
	const submitBtn = document.getElementById("submitBtn");
	submitBtn.addEventListener(
		"click",
		async (event) => {
			// reset modal in case of resubmitted answers
			modalBody.innerHTML = "";
			quiz_forms.forEach(async (form, i) => {
				let answer = "";
				const data = await new FormData(quiz_forms[i]);
				for (const entry of data.values()) {
					answer = entry;
				}
				if (answer === correctAnswers[i].answer) {
					modalBody.innerHTML +=
						`<div class="card m-2 bg-success text-white">
								<div class="card-body">
									${i + 1}. Correct
								</div>
							</div>`;
				} else {
					modalBody.innerHTML +=
						`<div class="card m-2 bg-danger text-white">
								<div class="card-body">
									${i + 1}. Incorrect
								</div>
							</div>`;
				}
			});

			$('#modal').modal('show');
		});

	document.querySelectorAll(".modalCloseBtn").
		forEach(btn => {
			btn.addEventListener(
				"click",
				async (e) => {
					$('#modal').modal('hide');
					quiz_forms.forEach((form) => {
						form.reset();
					});
				});
		});

</script>
